;; Define all routes of TEET frontend application
;; Each route is mapping from page name to map of route info
;;
;; Route info can have the following keys:
;; :path     is the URL path of the route
;; :parent   optional parent path (for constructing breadcrumbs)
;; :state    map describing what data must be present
;; :view     symbol defining the view fn for the page
;;           called with e! and the state
;; :crumb    code to display breadcrumb for this page
;;           can refer to params by symbol name and state as state
;;           can also refer to tr for translations
;;
;; State map has the following keys
;; :query    keyword naming the query to run
;; :args     arguments map for the query, can refer to params by symbol name

{:root {:path "/"
        :crumb (tr [:projects :map-view])
        :view teet.projects.projects-view/projects-map-page}
 :login {:path "/login"}

 :projects {:path "/projects/map"
            :crumb (tr [:projects :map-view])
            :view teet.projects.projects-view/projects-map-page}

 :projects-list {:path "/projects/list"
                 :crumb (tr [:projects :list-view])
                 :view teet.projects.projects-view/projects-list-page
                 :state {:query :thk.project/listing
                         :args {}}}

 ;; Project overview page
 :project {:path "/projects/:project"
           :parent :projects-list
           :crumb (teet.project.project-model/get-column (or (some-> state :thk.project/_lifecycles first)
                                                             state)
                                                         :thk.project/project-name)
           :view teet.project.project-view/project-page
           :state {:query :thk.project/fetch-project
                   :args {:thk.project/id project}}}


 ;; Project lifecycle page
 :project-lifecycle {:path "/projects/:project/:lifecycle"
                     :parent :project
                     :crumb (tr [:enum (-> state :thk.lifecycle/type :db/ident)])
                     :state {:query :thk.project/fetch-project-lifecycle
                             :args {:project project
                                    :lifecycle (goog.math.Long/fromString lifecycle)}}
                     :view teet.project.project-view/project-lifecycle-page}

 :activity-task {:path "/projects/:project/:lifecycle/:activity"
                 :parent :project-lifecycle
                 :view teet.project.project-view/project-activity-page} ;;todo: query and proper view

 :task-document {:path "/projects/:project/:activity/:task/:document"
                 :parent :activity-task
                 :view teet.document.document-view/document-page
                 :state {:query :document/fetch-document
                         :args {:document-id (goog.math.Long/fromString document)}}
                 :crumb (:document/name state)}

 :components {:path "/components" :view teet.ui.component-demo/demo}
 :road {:path "/road"
        :view teet.road-visualization.road-visualization-view/road-visualization}

 :admin {:path "/admin"
         :role :admin
         :view teet.admin.admin-view/admin-page
         :state {:query :admin/list-users
                 :args {}}
         :crumb (tr [:admin :title])}}
