;; Define all routes of TEET frontend application
;; Each route is mapping from page name to map of route info
;;
;; Route info can have the following keys:
;; :path     is the URL path of the route
;; :parent   optional parent path (for constructing breadcrumbs)
;; :state    map describing what data must be present
;; :view     symbol defining the view fn for the page
;;           called with e! and the state
;; :crumb    code to display breadcrumb for this page
;;           can refer to params by symbol name and state as state
;;           can also refer to tr for translations
;;
;; State map has the following keys
;; :query    keyword naming the query to run
;; :args     arguments map for the query, can refer to params by symbol name

{:root {:path "/"
        :crumb (tr [:projects :map-view])
        :view teet.dashboard.dashboard-view/dashboard-page
        :state {:query :dashboard/user-dashboard
                :args {}}}
 :login {:path "/login"
         :title (tr [:login :login])}

 :dashboard {:path "/dashboard"
             :crumb "Dashboard" ;(tr [:dashboard :title])
             :view teet.dashboard.dashboard-view/dashboard-page
             :state {:query :dashboard/user-dashboard
                     :args {}}}
 :projects {:path "/projects/map"
            :crumb (tr [:projects :map-view])
            :title (tr [:projects :map-view])
            :view teet.projects.projects-view/projects-map-page}

 :projects-list {:path "/projects/list"
                 :crumb (tr [:projects :list-view])
                 :title (tr [:projects :list-view])
                 :view teet.projects.projects-view/projects-list-page
                 :state {:query :thk.project/listing
                         :args {}}}

 :project {:path "/projects/:project"
           :keep-query-params #{:tab}
           :parent :projects-list
           :title (:thk.project/name state)
           :crumb (teet.project.project-model/get-column (or (some-> state :project)
                                                             state)
                                                         :thk.project/project-name)
           :view teet.project.project-view/project-page
           :state {:query :thk.project/fetch-project
                   :args {:thk.project/id project}}}

 :activity {:path "/projects/:project/:activity"
            :parent :project
            :crumb (-> state
                       (teet.project.project-model/activity-by-id activity)
                       :activity/name tr-enum)
            :title (-> state
                       (teet.project.project-model/activity-by-id activity)
                       :activity/name tr-enum)
            :view teet.activity.activity-view/activity-page
            :state {:query :thk.project/fetch-project
                    :args {:thk.project/id project
                           :activity-id activity}}}

 :activity-task {:path "/projects/:project/:activity/:task"
                 :parent :activity
                 :crumb (-> state
                            (teet.project.project-model/task-by-id task)
                            :task/type
                            tr-enum)
                 :title  (-> state
                             (teet.project.project-model/task-by-id task)
                             :task/type
                             tr-enum)
                 :view teet.task.task-view/task-page
                 :state {:query :thk.project/fetch-project
                         :args {:thk.project/id project
                                :task-id (->long task)}}}

 :file {:path "/projects/:project/:activity/:task/:file"
        :parent :activity-task
        :crumb (-> state (teet.project.project-model/file-by-id file) :file/name)
        :title (-> state (teet.project.project-model/file-by-id file) :file/name)
        :view teet.file.file-view/file-page
        :state {:query :thk.project/fetch-project
                :args {:thk.project/id project
                       :task-id (->long task)}}}

 :unauthorized {:path "/unauthorized" :view teet.ui.unauthorized/restricted-path}
 :components {:path "/components" :view teet.ui.component-demo/demo}
 :road {:path "/road"
        :view teet.road-visualization.road-visualization-view/road-visualization}

 :admin {:path "/admin"
         :permission :admin/add-user
         :view teet.admin.admin-view/admin-page
         :state {:query :admin/list-users
                 :args {}}
         :crumb (tr [:admin :title])}}
