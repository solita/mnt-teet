name: playwright

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('app/backend/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache frontend build
        uses: actions/cache@v2
        id: frontend
        with:
          path: ~/work/mnt-teet/mnt-teet/app/frontend/out
          key: frontend-${{ hashFiles('**/*.cljs') }}-${{ hashFiles('**/*.cljc') }}
      - name: setup clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          tools-deps: '1.10.1.510'
      - name: setup dev tools
        run: |
          export DEV_TOOLS_REPO_USER=${{ secrets.DEV_TOOLS_REPO_USER }}
          export DEV_TOOLS_REPO_PASS=${{ secrets.DEV_TOOLS_REPO_PASS }}
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ./ci/scripts/setup-dev-tools.bash
      - name: configure datomic local
        run: |
          mkdir ~/.datomic
          mkdir /tmp/datomic-storage
          echo "{:storage-dir \"/tmp/datomic-storage\"}" > ~/.datomic/dev-local.edn
      - name: build frontend
        if: steps.frontend.outputs.cache-hit != 'true'
        run: ./ci-build.sh
        working-directory: app/frontend/
      - name: run browser tests
        run: ./playwright-testing-env.sh "${{ secrets.AWS_ACCESS_KEY_ID }}" "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        working-directory: ci/browser-tests/
