name: test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:12-3.1-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: teet
          POSTGRES_DB: teet
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/deps.edn') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: setup clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        tools-deps: '1.10.1.510'
    - name: setup dev tools
      run: |
        export DEV_TOOLS_REPO_USER=${{ secrets.DEV_TOOLS_REPO_USER }}
        export DEV_TOOLS_REPO_PASS=${{ secrets.DEV_TOOLS_REPO_PASS }}
        export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ./ci/scripts/setup-dev-tools.bash
    - name: configure datomic local
      run: |
        mkdir ~/.datomic
        mkdir /tmp/datomic-storage
        echo "{:storage-dir \"/tmp/datomic-storage\"}" > ~/.datomic/dev-local.edn
    - name: migrate postgres
      working-directory: db/
      env:
        DB_URI: jdbc:postgresql://localhost:5432/teet
        DB_USER: teet
        DB_PASSWORD: postgres
      run: clojure -m migrate
    - name: run backend tests
      run: clojure -A:ci-test
      working-directory: app/backend/
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    - name: run frontend tests
      run: ./run-tests.sh
      working-directory: app/frontend/
